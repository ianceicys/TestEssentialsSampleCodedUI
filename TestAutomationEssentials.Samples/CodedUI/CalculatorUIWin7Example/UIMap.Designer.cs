// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 14.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace CalculatorUIWin7Example
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.WinControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public partial class UIMap
    {
        
        #region Properties
        public UICalculatorWindow UICalculatorWindow
        {
            get
            {
                if ((this.mUICalculatorWindow == null))
                {
                    this.mUICalculatorWindow = new UICalculatorWindow();
                }
                return this.mUICalculatorWindow;
            }
        }
        
        public UIAboutCalculatorWindow UIAboutCalculatorWindow
        {
            get
            {
                if ((this.mUIAboutCalculatorWindow == null))
                {
                    this.mUIAboutCalculatorWindow = new UIAboutCalculatorWindow();
                }
                return this.mUIAboutCalculatorWindow;
            }
        }
        #endregion
        
        #region Fields
        private UICalculatorWindow mUICalculatorWindow;
        
        private UIAboutCalculatorWindow mUIAboutCalculatorWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UICalculatorWindow : WinWindow
    {
        
        public UICalculatorWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Calculator";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "CalcFrame";
            this.WindowTitles.Add("Calculator");
            #endregion
        }
        
        #region Properties
        public UIApplicationMenuBar UIApplicationMenuBar
        {
            get
            {
                if ((this.mUIApplicationMenuBar == null))
                {
                    this.mUIApplicationMenuBar = new UIApplicationMenuBar(this);
                }
                return this.mUIApplicationMenuBar;
            }
        }
        
        public UIItemWindow UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow(this);
                }
                return this.mUIItemWindow;
            }
        }
        
        public WinTitleBar UICalculatorTitleBar
        {
            get
            {
                if ((this.mUICalculatorTitleBar == null))
                {
                    this.mUICalculatorTitleBar = new WinTitleBar(this);
                }
                return this.mUICalculatorTitleBar;
            }
        }
        
        public UIOutputFieldComboBox UIOutputFieldComboBox
        {
            get
            {
                if ((this.mUIOutputFieldComboBox == null))
                {
                    this.mUIOutputFieldComboBox = new UIOutputFieldComboBox(this);
                }
                return this.mUIOutputFieldComboBox;
            }
        }
        #endregion
        
        #region Fields
        private UIApplicationMenuBar mUIApplicationMenuBar;
        
        private UIItemWindow mUIItemWindow;
        
        private WinTitleBar mUICalculatorTitleBar;
        
        private UIOutputFieldComboBox mUIOutputFieldComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIApplicationMenuBar : WinMenuBar
    {
        
        public UIApplicationMenuBar(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinMenu.PropertyNames.Name] = "Application";
            #endregion
        }
        
        #region Properties
        public UIViewMenuItem UIViewMenuItem
        {
            get
            {
                if ((this.mUIViewMenuItem == null))
                {
                    this.mUIViewMenuItem = new UIViewMenuItem(this);
                }
                return this.mUIViewMenuItem;
            }
        }
        
        public UIEditMenuItem UIEditMenuItem
        {
            get
            {
                if ((this.mUIEditMenuItem == null))
                {
                    this.mUIEditMenuItem = new UIEditMenuItem(this);
                }
                return this.mUIEditMenuItem;
            }
        }
        
        public UIHelpMenuItem UIHelpMenuItem
        {
            get
            {
                if ((this.mUIHelpMenuItem == null))
                {
                    this.mUIHelpMenuItem = new UIHelpMenuItem(this);
                }
                return this.mUIHelpMenuItem;
            }
        }
        #endregion
        
        #region Fields
        private UIViewMenuItem mUIViewMenuItem;
        
        private UIEditMenuItem mUIEditMenuItem;
        
        private UIHelpMenuItem mUIHelpMenuItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIViewMenuItem : WinMenuItem
    {
        
        public UIViewMenuItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinMenuItem.PropertyNames.Name] = "View";
            #endregion
        }
        
        #region Properties
        public WinMenuItem UIStandardAlt1MenuItem
        {
            get
            {
                if ((this.mUIStandardAlt1MenuItem == null))
                {
                    this.mUIStandardAlt1MenuItem = new WinMenuItem(this);
                    #region Search Criteria
                    this.mUIStandardAlt1MenuItem.SearchProperties[WinMenuItem.PropertyNames.Name] = "Standard\tAlt+1";
                    this.mUIStandardAlt1MenuItem.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    #endregion
                }
                return this.mUIStandardAlt1MenuItem;
            }
        }
        
        public WinMenuItem UIScientificAlt2MenuItem
        {
            get
            {
                if ((this.mUIScientificAlt2MenuItem == null))
                {
                    this.mUIScientificAlt2MenuItem = new WinMenuItem(this);
                    #region Search Criteria
                    this.mUIScientificAlt2MenuItem.SearchProperties[WinMenuItem.PropertyNames.Name] = "Scientific\tAlt+2";
                    this.mUIScientificAlt2MenuItem.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    #endregion
                }
                return this.mUIScientificAlt2MenuItem;
            }
        }
        
        public WinMenuItem UIProgrammerAlt3MenuItem
        {
            get
            {
                if ((this.mUIProgrammerAlt3MenuItem == null))
                {
                    this.mUIProgrammerAlt3MenuItem = new WinMenuItem(this);
                    #region Search Criteria
                    this.mUIProgrammerAlt3MenuItem.SearchProperties[WinMenuItem.PropertyNames.Name] = "Programmer\tAlt+3";
                    this.mUIProgrammerAlt3MenuItem.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    #endregion
                }
                return this.mUIProgrammerAlt3MenuItem;
            }
        }
        
        public WinMenuItem UIStatisticsAlt4MenuItem
        {
            get
            {
                if ((this.mUIStatisticsAlt4MenuItem == null))
                {
                    this.mUIStatisticsAlt4MenuItem = new WinMenuItem(this);
                    #region Search Criteria
                    this.mUIStatisticsAlt4MenuItem.SearchProperties[WinMenuItem.PropertyNames.Name] = "Statistics\tAlt+4";
                    this.mUIStatisticsAlt4MenuItem.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    #endregion
                }
                return this.mUIStatisticsAlt4MenuItem;
            }
        }
        
        public WinMenuItem UIHistoryCtrlHMenuItem
        {
            get
            {
                if ((this.mUIHistoryCtrlHMenuItem == null))
                {
                    this.mUIHistoryCtrlHMenuItem = new WinMenuItem(this);
                    #region Search Criteria
                    this.mUIHistoryCtrlHMenuItem.SearchProperties[WinMenuItem.PropertyNames.Name] = "History\tCtrl+H";
                    this.mUIHistoryCtrlHMenuItem.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    #endregion
                }
                return this.mUIHistoryCtrlHMenuItem;
            }
        }
        
        public WinMenuItem UIDigitgroupingMenuItem
        {
            get
            {
                if ((this.mUIDigitgroupingMenuItem == null))
                {
                    this.mUIDigitgroupingMenuItem = new WinMenuItem(this);
                    #region Search Criteria
                    this.mUIDigitgroupingMenuItem.SearchProperties[WinMenuItem.PropertyNames.Name] = "Digit grouping";
                    this.mUIDigitgroupingMenuItem.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    #endregion
                }
                return this.mUIDigitgroupingMenuItem;
            }
        }
        
        public WinMenuItem UIBasicCtrlF4MenuItem
        {
            get
            {
                if ((this.mUIBasicCtrlF4MenuItem == null))
                {
                    this.mUIBasicCtrlF4MenuItem = new WinMenuItem(this);
                    #region Search Criteria
                    this.mUIBasicCtrlF4MenuItem.SearchProperties[WinMenuItem.PropertyNames.Name] = "Basic\tCtrl+F4";
                    this.mUIBasicCtrlF4MenuItem.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    #endregion
                }
                return this.mUIBasicCtrlF4MenuItem;
            }
        }
        
        public WinMenuItem UIUnitconversionCtrlUMenuItem
        {
            get
            {
                if ((this.mUIUnitconversionCtrlUMenuItem == null))
                {
                    this.mUIUnitconversionCtrlUMenuItem = new WinMenuItem(this);
                    #region Search Criteria
                    this.mUIUnitconversionCtrlUMenuItem.SearchProperties[WinMenuItem.PropertyNames.Name] = "Unit conversion\tCtrl+U";
                    this.mUIUnitconversionCtrlUMenuItem.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    #endregion
                }
                return this.mUIUnitconversionCtrlUMenuItem;
            }
        }
        
        public WinMenuItem UIDatecalculationCtrlEMenuItem
        {
            get
            {
                if ((this.mUIDatecalculationCtrlEMenuItem == null))
                {
                    this.mUIDatecalculationCtrlEMenuItem = new WinMenuItem(this);
                    #region Search Criteria
                    this.mUIDatecalculationCtrlEMenuItem.SearchProperties[WinMenuItem.PropertyNames.Name] = "Date calculation\tCtrl+E";
                    this.mUIDatecalculationCtrlEMenuItem.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    #endregion
                }
                return this.mUIDatecalculationCtrlEMenuItem;
            }
        }
        
        public UIWorksheetsMenuItem UIWorksheetsMenuItem
        {
            get
            {
                if ((this.mUIWorksheetsMenuItem == null))
                {
                    this.mUIWorksheetsMenuItem = new UIWorksheetsMenuItem(this);
                }
                return this.mUIWorksheetsMenuItem;
            }
        }
        #endregion
        
        #region Fields
        private WinMenuItem mUIStandardAlt1MenuItem;
        
        private WinMenuItem mUIScientificAlt2MenuItem;
        
        private WinMenuItem mUIProgrammerAlt3MenuItem;
        
        private WinMenuItem mUIStatisticsAlt4MenuItem;
        
        private WinMenuItem mUIHistoryCtrlHMenuItem;
        
        private WinMenuItem mUIDigitgroupingMenuItem;
        
        private WinMenuItem mUIBasicCtrlF4MenuItem;
        
        private WinMenuItem mUIUnitconversionCtrlUMenuItem;
        
        private WinMenuItem mUIDatecalculationCtrlEMenuItem;
        
        private UIWorksheetsMenuItem mUIWorksheetsMenuItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIWorksheetsMenuItem : WinMenuItem
    {
        
        public UIWorksheetsMenuItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinMenuItem.PropertyNames.Name] = "Worksheets";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            #endregion
        }
        
        #region Properties
        public WinMenuItem UIMortgageMenuItem
        {
            get
            {
                if ((this.mUIMortgageMenuItem == null))
                {
                    this.mUIMortgageMenuItem = new WinMenuItem(this);
                    #region Search Criteria
                    this.mUIMortgageMenuItem.SearchProperties[WinMenuItem.PropertyNames.Name] = "Mortgage";
                    this.mUIMortgageMenuItem.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    #endregion
                }
                return this.mUIMortgageMenuItem;
            }
        }
        
        public WinMenuItem UIVehicleleaseMenuItem
        {
            get
            {
                if ((this.mUIVehicleleaseMenuItem == null))
                {
                    this.mUIVehicleleaseMenuItem = new WinMenuItem(this);
                    #region Search Criteria
                    this.mUIVehicleleaseMenuItem.SearchProperties[WinMenuItem.PropertyNames.Name] = "Vehicle lease";
                    this.mUIVehicleleaseMenuItem.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    #endregion
                }
                return this.mUIVehicleleaseMenuItem;
            }
        }
        
        public WinMenuItem UIFueleconomympgMenuItem
        {
            get
            {
                if ((this.mUIFueleconomympgMenuItem == null))
                {
                    this.mUIFueleconomympgMenuItem = new WinMenuItem(this);
                    #region Search Criteria
                    this.mUIFueleconomympgMenuItem.SearchProperties[WinMenuItem.PropertyNames.Name] = "Fuel economy (mpg)";
                    this.mUIFueleconomympgMenuItem.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    #endregion
                }
                return this.mUIFueleconomympgMenuItem;
            }
        }
        
        public WinMenuItem UIFueleconomyL100kmMenuItem
        {
            get
            {
                if ((this.mUIFueleconomyL100kmMenuItem == null))
                {
                    this.mUIFueleconomyL100kmMenuItem = new WinMenuItem(this);
                    #region Search Criteria
                    this.mUIFueleconomyL100kmMenuItem.SearchProperties[WinMenuItem.PropertyNames.Name] = "Fuel economy (L/100 km)";
                    this.mUIFueleconomyL100kmMenuItem.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    #endregion
                }
                return this.mUIFueleconomyL100kmMenuItem;
            }
        }
        #endregion
        
        #region Fields
        private WinMenuItem mUIMortgageMenuItem;
        
        private WinMenuItem mUIVehicleleaseMenuItem;
        
        private WinMenuItem mUIFueleconomympgMenuItem;
        
        private WinMenuItem mUIFueleconomyL100kmMenuItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIEditMenuItem : WinMenuItem
    {
        
        public UIEditMenuItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinMenuItem.PropertyNames.Name] = "Edit";
            #endregion
        }
        
        #region Properties
        public WinMenuItem UICopyCtrlCMenuItem
        {
            get
            {
                if ((this.mUICopyCtrlCMenuItem == null))
                {
                    this.mUICopyCtrlCMenuItem = new WinMenuItem(this);
                    #region Search Criteria
                    this.mUICopyCtrlCMenuItem.SearchProperties[WinMenuItem.PropertyNames.Name] = "Copy\tCtrl+C";
                    this.mUICopyCtrlCMenuItem.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    #endregion
                }
                return this.mUICopyCtrlCMenuItem;
            }
        }
        
        public WinMenuItem UIPasteCtrlVMenuItem
        {
            get
            {
                if ((this.mUIPasteCtrlVMenuItem == null))
                {
                    this.mUIPasteCtrlVMenuItem = new WinMenuItem(this);
                    #region Search Criteria
                    this.mUIPasteCtrlVMenuItem.SearchProperties[WinMenuItem.PropertyNames.Name] = "Paste\tCtrl+V";
                    this.mUIPasteCtrlVMenuItem.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    #endregion
                }
                return this.mUIPasteCtrlVMenuItem;
            }
        }
        
        public UIHistoryMenuItem UIHistoryMenuItem
        {
            get
            {
                if ((this.mUIHistoryMenuItem == null))
                {
                    this.mUIHistoryMenuItem = new UIHistoryMenuItem(this);
                }
                return this.mUIHistoryMenuItem;
            }
        }
        #endregion
        
        #region Fields
        private WinMenuItem mUICopyCtrlCMenuItem;
        
        private WinMenuItem mUIPasteCtrlVMenuItem;
        
        private UIHistoryMenuItem mUIHistoryMenuItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIHistoryMenuItem : WinMenuItem
    {
        
        public UIHistoryMenuItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinMenuItem.PropertyNames.Name] = "History";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            #endregion
        }
        
        #region Properties
        public WinMenuItem UICopyhistoryMenuItem
        {
            get
            {
                if ((this.mUICopyhistoryMenuItem == null))
                {
                    this.mUICopyhistoryMenuItem = new WinMenuItem(this);
                    #region Search Criteria
                    this.mUICopyhistoryMenuItem.SearchProperties[WinMenuItem.PropertyNames.Name] = "Copy history";
                    this.mUICopyhistoryMenuItem.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    #endregion
                }
                return this.mUICopyhistoryMenuItem;
            }
        }
        
        public WinMenuItem UIEditF2MenuItem
        {
            get
            {
                if ((this.mUIEditF2MenuItem == null))
                {
                    this.mUIEditF2MenuItem = new WinMenuItem(this);
                    #region Search Criteria
                    this.mUIEditF2MenuItem.SearchProperties[WinMenuItem.PropertyNames.Name] = "Edit\tF2";
                    this.mUIEditF2MenuItem.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    #endregion
                }
                return this.mUIEditF2MenuItem;
            }
        }
        
        public WinMenuItem UICanceleditEscMenuItem
        {
            get
            {
                if ((this.mUICanceleditEscMenuItem == null))
                {
                    this.mUICanceleditEscMenuItem = new WinMenuItem(this);
                    #region Search Criteria
                    this.mUICanceleditEscMenuItem.SearchProperties[WinMenuItem.PropertyNames.Name] = "Cancel edit\tEsc";
                    this.mUICanceleditEscMenuItem.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    #endregion
                }
                return this.mUICanceleditEscMenuItem;
            }
        }
        
        public WinMenuItem UIClearCtrlShiftDMenuItem
        {
            get
            {
                if ((this.mUIClearCtrlShiftDMenuItem == null))
                {
                    this.mUIClearCtrlShiftDMenuItem = new WinMenuItem(this);
                    #region Search Criteria
                    this.mUIClearCtrlShiftDMenuItem.SearchProperties[WinMenuItem.PropertyNames.Name] = "Clear\tCtrl+Shift+D";
                    this.mUIClearCtrlShiftDMenuItem.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    #endregion
                }
                return this.mUIClearCtrlShiftDMenuItem;
            }
        }
        #endregion
        
        #region Fields
        private WinMenuItem mUICopyhistoryMenuItem;
        
        private WinMenuItem mUIEditF2MenuItem;
        
        private WinMenuItem mUICanceleditEscMenuItem;
        
        private WinMenuItem mUIClearCtrlShiftDMenuItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIHelpMenuItem : WinMenuItem
    {
        
        public UIHelpMenuItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinMenuItem.PropertyNames.Name] = "Help";
            #endregion
        }
        
        #region Properties
        public WinMenuItem UIViewHelpF1MenuItem
        {
            get
            {
                if ((this.mUIViewHelpF1MenuItem == null))
                {
                    this.mUIViewHelpF1MenuItem = new WinMenuItem(this);
                    #region Search Criteria
                    this.mUIViewHelpF1MenuItem.SearchProperties[WinMenuItem.PropertyNames.Name] = "View Help\tF1";
                    this.mUIViewHelpF1MenuItem.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    #endregion
                }
                return this.mUIViewHelpF1MenuItem;
            }
        }
        
        public WinMenuItem UIAboutCalculatorMenuItem
        {
            get
            {
                if ((this.mUIAboutCalculatorMenuItem == null))
                {
                    this.mUIAboutCalculatorMenuItem = new WinMenuItem(this);
                    #region Search Criteria
                    this.mUIAboutCalculatorMenuItem.SearchProperties[WinMenuItem.PropertyNames.Name] = "About Calculator";
                    this.mUIAboutCalculatorMenuItem.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    #endregion
                }
                return this.mUIAboutCalculatorMenuItem;
            }
        }
        #endregion
        
        #region Fields
        private WinMenuItem mUIViewHelpF1MenuItem;
        
        private WinMenuItem mUIAboutCalculatorMenuItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIItemWindow : WinWindow
    {
        
        public UIItemWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "130";
            #endregion
        }
        
        #region Properties
        public WinButton UIItem0Button
        {
            get
            {
                if ((this.mUIItem0Button == null))
                {
                    this.mUIItem0Button = new WinButton(this);
                    #region Search Criteria
                    this.mUIItem0Button.SearchProperties[WinButton.PropertyNames.Name] = "0";
                    #endregion
                }
                return this.mUIItem0Button;
            }
        }
        
        public WinButton UIDecimalseparatorButton
        {
            get
            {
                if ((this.mUIDecimalseparatorButton == null))
                {
                    this.mUIDecimalseparatorButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIDecimalseparatorButton.SearchProperties[WinButton.PropertyNames.Name] = "Decimal separator";
                    #endregion
                }
                return this.mUIDecimalseparatorButton;
            }
        }
        
        public WinButton UIItem6Button
        {
            get
            {
                if ((this.mUIItem6Button == null))
                {
                    this.mUIItem6Button = new WinButton(this);
                    #region Search Criteria
                    this.mUIItem6Button.SearchProperties[WinButton.PropertyNames.Name] = "6";
                    #endregion
                }
                return this.mUIItem6Button;
            }
        }
        
        public WinButton UIItem7Button
        {
            get
            {
                if ((this.mUIItem7Button == null))
                {
                    this.mUIItem7Button = new WinButton(this);
                    #region Search Criteria
                    this.mUIItem7Button.SearchProperties[WinButton.PropertyNames.Name] = "7";
                    #endregion
                }
                return this.mUIItem7Button;
            }
        }
        
        public WinButton UIItem8Button
        {
            get
            {
                if ((this.mUIItem8Button == null))
                {
                    this.mUIItem8Button = new WinButton(this);
                    #region Search Criteria
                    this.mUIItem8Button.SearchProperties[WinButton.PropertyNames.Name] = "8";
                    #endregion
                }
                return this.mUIItem8Button;
            }
        }
        
        public WinButton UIItem9Button
        {
            get
            {
                if ((this.mUIItem9Button == null))
                {
                    this.mUIItem9Button = new WinButton(this);
                    #region Search Criteria
                    this.mUIItem9Button.SearchProperties[WinButton.PropertyNames.Name] = "9";
                    #endregion
                }
                return this.mUIItem9Button;
            }
        }
        
        public WinButton UIMultiplyButton
        {
            get
            {
                if ((this.mUIMultiplyButton == null))
                {
                    this.mUIMultiplyButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIMultiplyButton.SearchProperties[WinButton.PropertyNames.Name] = "Multiply";
                    #endregion
                }
                return this.mUIMultiplyButton;
            }
        }
        
        public WinButton UIReciprocalButton
        {
            get
            {
                if ((this.mUIReciprocalButton == null))
                {
                    this.mUIReciprocalButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIReciprocalButton.SearchProperties[WinButton.PropertyNames.Name] = "Reciprocal";
                    #endregion
                }
                return this.mUIReciprocalButton;
            }
        }
        
        public WinButton UIPercentageButton
        {
            get
            {
                if ((this.mUIPercentageButton == null))
                {
                    this.mUIPercentageButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIPercentageButton.SearchProperties[WinButton.PropertyNames.Name] = "Percentage";
                    #endregion
                }
                return this.mUIPercentageButton;
            }
        }
        
        public WinButton UIDivideButton
        {
            get
            {
                if ((this.mUIDivideButton == null))
                {
                    this.mUIDivideButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIDivideButton.SearchProperties[WinButton.PropertyNames.Name] = "Divide";
                    #endregion
                }
                return this.mUIDivideButton;
            }
        }
        
        public WinButton UINegateButton
        {
            get
            {
                if ((this.mUINegateButton == null))
                {
                    this.mUINegateButton = new WinButton(this);
                    #region Search Criteria
                    this.mUINegateButton.SearchProperties[WinButton.PropertyNames.Name] = "Negate";
                    #endregion
                }
                return this.mUINegateButton;
            }
        }
        
        public WinButton UISquarerootButton
        {
            get
            {
                if ((this.mUISquarerootButton == null))
                {
                    this.mUISquarerootButton = new WinButton(this);
                    #region Search Criteria
                    this.mUISquarerootButton.SearchProperties[WinButton.PropertyNames.Name] = "Square root";
                    #endregion
                }
                return this.mUISquarerootButton;
            }
        }
        
        public WinButton UIAddButton
        {
            get
            {
                if ((this.mUIAddButton == null))
                {
                    this.mUIAddButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIAddButton.SearchProperties[WinButton.PropertyNames.Name] = "Add";
                    #endregion
                }
                return this.mUIAddButton;
            }
        }
        
        public WinButton UIClearButton
        {
            get
            {
                if ((this.mUIClearButton == null))
                {
                    this.mUIClearButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIClearButton.SearchProperties[WinButton.PropertyNames.Name] = "Clear";
                    #endregion
                }
                return this.mUIClearButton;
            }
        }
        
        public WinButton UIClearentryButton
        {
            get
            {
                if ((this.mUIClearentryButton == null))
                {
                    this.mUIClearentryButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIClearentryButton.SearchProperties[WinButton.PropertyNames.Name] = "Clear entry";
                    #endregion
                }
                return this.mUIClearentryButton;
            }
        }
        
        public WinButton UIBackspaceButton
        {
            get
            {
                if ((this.mUIBackspaceButton == null))
                {
                    this.mUIBackspaceButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIBackspaceButton.SearchProperties[WinButton.PropertyNames.Name] = "Backspace";
                    #endregion
                }
                return this.mUIBackspaceButton;
            }
        }
        
        public WinComboBox UIOutputFieldComboBox
        {
            get
            {
                if ((this.mUIOutputFieldComboBox == null))
                {
                    this.mUIOutputFieldComboBox = new WinComboBox(this);
                    #region Search Criteria
                    this.mUIOutputFieldComboBox.SearchProperties[WinComboBox.PropertyNames.Name] = "Output Field";
                    #endregion
                }
                return this.mUIOutputFieldComboBox;
            }
        }
        
        public WinEdit UIPurchasepriceEdit
        {
            get
            {
                if ((this.mUIPurchasepriceEdit == null))
                {
                    this.mUIPurchasepriceEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUIPurchasepriceEdit.SearchProperties[WinEdit.PropertyNames.Name] = "Purchase price";
                    #endregion
                }
                return this.mUIPurchasepriceEdit;
            }
        }
        
        public WinButton UIEqualsButton
        {
            get
            {
                if ((this.mUIEqualsButton == null))
                {
                    this.mUIEqualsButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIEqualsButton.SearchProperties[WinButton.PropertyNames.Name] = "Equals";
                    #endregion
                }
                return this.mUIEqualsButton;
            }
        }
        
        public WinEdit UIDownpaymentEdit
        {
            get
            {
                if ((this.mUIDownpaymentEdit == null))
                {
                    this.mUIDownpaymentEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUIDownpaymentEdit.SearchProperties[WinEdit.PropertyNames.Name] = "Down payment";
                    #endregion
                }
                return this.mUIDownpaymentEdit;
            }
        }
        
        public WinEdit UITermyearsEdit
        {
            get
            {
                if ((this.mUITermyearsEdit == null))
                {
                    this.mUITermyearsEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUITermyearsEdit.SearchProperties[WinEdit.PropertyNames.Name] = "Term (years)";
                    #endregion
                }
                return this.mUITermyearsEdit;
            }
        }
        
        public WinEdit UIInterestrateEdit
        {
            get
            {
                if ((this.mUIInterestrateEdit == null))
                {
                    this.mUIInterestrateEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUIInterestrateEdit.SearchProperties[WinEdit.PropertyNames.Name] = "Interest rate (%)";
                    #endregion
                }
                return this.mUIInterestrateEdit;
            }
        }
        
        public WinButton UICalculateButton
        {
            get
            {
                if ((this.mUICalculateButton == null))
                {
                    this.mUICalculateButton = new WinButton(this);
                    #region Search Criteria
                    this.mUICalculateButton.SearchProperties[WinButton.PropertyNames.Name] = "Calculate";
                    #endregion
                }
                return this.mUICalculateButton;
            }
        }
        
        public WinEdit UIMonthlypaymentEdit
        {
            get
            {
                if ((this.mUIMonthlypaymentEdit == null))
                {
                    this.mUIMonthlypaymentEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUIMonthlypaymentEdit.SearchProperties[WinEdit.PropertyNames.Name] = "Monthly payment";
                    #endregion
                }
                return this.mUIMonthlypaymentEdit;
            }
        }
        
        public WinButton UISubtractButton
        {
            get
            {
                if ((this.mUISubtractButton == null))
                {
                    this.mUISubtractButton = new WinButton(this);
                    #region Search Criteria
                    this.mUISubtractButton.SearchProperties[WinButton.PropertyNames.Name] = "Subtract";
                    #endregion
                }
                return this.mUISubtractButton;
            }
        }
        
        public WinButton UIItem1Button
        {
            get
            {
                if ((this.mUIItem1Button == null))
                {
                    this.mUIItem1Button = new WinButton(this);
                    #region Search Criteria
                    this.mUIItem1Button.SearchProperties[WinButton.PropertyNames.Name] = "1";
                    #endregion
                }
                return this.mUIItem1Button;
            }
        }
        
        public WinButton UIItem2Button
        {
            get
            {
                if ((this.mUIItem2Button == null))
                {
                    this.mUIItem2Button = new WinButton(this);
                    #region Search Criteria
                    this.mUIItem2Button.SearchProperties[WinButton.PropertyNames.Name] = "2";
                    #endregion
                }
                return this.mUIItem2Button;
            }
        }
        
        public WinButton UIItem3Button
        {
            get
            {
                if ((this.mUIItem3Button == null))
                {
                    this.mUIItem3Button = new WinButton(this);
                    #region Search Criteria
                    this.mUIItem3Button.SearchProperties[WinButton.PropertyNames.Name] = "3";
                    #endregion
                }
                return this.mUIItem3Button;
            }
        }
        
        public WinButton UIItem4Button
        {
            get
            {
                if ((this.mUIItem4Button == null))
                {
                    this.mUIItem4Button = new WinButton(this);
                    #region Search Criteria
                    this.mUIItem4Button.SearchProperties[WinButton.PropertyNames.Name] = "4";
                    #endregion
                }
                return this.mUIItem4Button;
            }
        }
        
        public WinButton UIItem5Button
        {
            get
            {
                if ((this.mUIItem5Button == null))
                {
                    this.mUIItem5Button = new WinButton(this);
                    #region Search Criteria
                    this.mUIItem5Button.SearchProperties[WinButton.PropertyNames.Name] = "5";
                    #endregion
                }
                return this.mUIItem5Button;
            }
        }
        
        public WinText UIItemResultText
        {
            get
            {
                if ((this.mUIItemResultText == null))
                {
                    this.mUIItemResultText = new WinText(this);
                    #region Search Criteria
                    this.mUIItemResultText.SearchProperties[WinText.PropertyNames.Name] = "Result";
                    #endregion
                }
                return this.mUIItemResultText;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIItem0Button;
        
        private WinButton mUIDecimalseparatorButton;
        
        private WinButton mUIItem6Button;
        
        private WinButton mUIItem7Button;
        
        private WinButton mUIItem8Button;
        
        private WinButton mUIItem9Button;
        
        private WinButton mUIMultiplyButton;
        
        private WinButton mUIReciprocalButton;
        
        private WinButton mUIPercentageButton;
        
        private WinButton mUIDivideButton;
        
        private WinButton mUINegateButton;
        
        private WinButton mUISquarerootButton;
        
        private WinButton mUIAddButton;
        
        private WinButton mUIClearButton;
        
        private WinButton mUIClearentryButton;
        
        private WinButton mUIBackspaceButton;
        
        private WinComboBox mUIOutputFieldComboBox;
        
        private WinEdit mUIPurchasepriceEdit;
        
        private WinButton mUIEqualsButton;
        
        private WinEdit mUIDownpaymentEdit;
        
        private WinEdit mUITermyearsEdit;
        
        private WinEdit mUIInterestrateEdit;
        
        private WinButton mUICalculateButton;
        
        private WinEdit mUIMonthlypaymentEdit;
        
        private WinButton mUISubtractButton;
        
        private WinButton mUIItem1Button;
        
        private WinButton mUIItem2Button;
        
        private WinButton mUIItem3Button;
        
        private WinButton mUIItem4Button;
        
        private WinButton mUIItem5Button;
        
        private WinText mUIItemResultText;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIOutputFieldComboBox : WinComboBox
    {
        
        public UIOutputFieldComboBox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinComboBox.PropertyNames.Name] = "Output Field";
            #endregion
        }
        
        #region Properties
        public WinText UISelectthevalueyouwanText
        {
            get
            {
                if ((this.mUISelectthevalueyouwanText == null))
                {
                    this.mUISelectthevalueyouwanText = new WinText(this);
                    #region Search Criteria
                    this.mUISelectthevalueyouwanText.SearchProperties[WinText.PropertyNames.Name] = "Select the value you want to calculate";
                    #endregion
                }
                return this.mUISelectthevalueyouwanText;
            }
        }
        #endregion
        
        #region Fields
        private WinText mUISelectthevalueyouwanText;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIAboutCalculatorWindow : WinWindow
    {
        
        public UIAboutCalculatorWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "About Calculator";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "#32770";
            this.WindowTitles.Add("About Calculator");
            #endregion
        }
        
        #region Properties
        public UITheWindows7EnterprisWindow UITheWindows7EnterprisWindow
        {
            get
            {
                if ((this.mUITheWindows7EnterprisWindow == null))
                {
                    this.mUITheWindows7EnterprisWindow = new UITheWindows7EnterprisWindow(this);
                }
                return this.mUITheWindows7EnterprisWindow;
            }
        }
        
        public WinTitleBar UIAboutCalculatorTitleBar
        {
            get
            {
                if ((this.mUIAboutCalculatorTitleBar == null))
                {
                    this.mUIAboutCalculatorTitleBar = new WinTitleBar(this);
                    #region Search Criteria
                    this.mUIAboutCalculatorTitleBar.WindowTitles.Add("About Calculator");
                    #endregion
                }
                return this.mUIAboutCalculatorTitleBar;
            }
        }
        
        public UIAboutCalculatorDialog UIAboutCalculatorDialog
        {
            get
            {
                if ((this.mUIAboutCalculatorDialog == null))
                {
                    this.mUIAboutCalculatorDialog = new UIAboutCalculatorDialog(this);
                }
                return this.mUIAboutCalculatorDialog;
            }
        }
        #endregion
        
        #region Fields
        private UITheWindows7EnterprisWindow mUITheWindows7EnterprisWindow;
        
        private WinTitleBar mUIAboutCalculatorTitleBar;
        
        private UIAboutCalculatorDialog mUIAboutCalculatorDialog;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UITheWindows7EnterprisWindow : WinWindow
    {
        
        public UITheWindows7EnterprisWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "13587";
            this.WindowTitles.Add("About Calculator");
            #endregion
        }
        
        #region Properties
        public WinText UITheWindows7EnterprisText
        {
            get
            {
                if ((this.mUITheWindows7EnterprisText == null))
                {
                    this.mUITheWindows7EnterprisText = new WinText(this);
                    #region Search Criteria
                    this.mUITheWindows7EnterprisText.SearchProperties[WinText.PropertyNames.Name] = "The Windows 7 Enterprise operating system and its user interface are protected by" +
                        " trademark and other pending or existing intellectual property rights in the Uni" +
                        "ted States and other countries.";
                    this.mUITheWindows7EnterprisText.WindowTitles.Add("About Calculator");
                    #endregion
                }
                return this.mUITheWindows7EnterprisText;
            }
        }
        #endregion
        
        #region Fields
        private WinText mUITheWindows7EnterprisText;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIAboutCalculatorDialog : WinControl
    {
        
        public UIAboutCalculatorDialog(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.Name] = "About Calculator";
            this.SearchProperties[UITestControl.PropertyNames.ControlType] = "Dialog";
            this.WindowTitles.Add("About Calculator");
            #endregion
        }
        
        #region Properties
        public WinWindow UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new WinWindow(this);
                    #region Search Criteria
                    this.mUIItemWindow.SearchProperties[WinWindow.PropertyNames.ClassName] = "Static";
                    this.mUIItemWindow.WindowTitles.Add("About Calculator");
                    #endregion
                }
                return this.mUIItemWindow;
            }
        }
        
        public WinWindow UIMicrosoftWindowsWindow
        {
            get
            {
                if ((this.mUIMicrosoftWindowsWindow == null))
                {
                    this.mUIMicrosoftWindowsWindow = new WinWindow(this);
                    #region Search Criteria
                    this.mUIMicrosoftWindowsWindow.SearchProperties[WinWindow.PropertyNames.Name] = "Microsoft Windows";
                    this.mUIMicrosoftWindowsWindow.SearchProperties[WinWindow.PropertyNames.ClassName] = "Static";
                    this.mUIMicrosoftWindowsWindow.WindowTitles.Add("About Calculator");
                    #endregion
                }
                return this.mUIMicrosoftWindowsWindow;
            }
        }
        
        public WinWindow UIVersion61Build7601SeWindow
        {
            get
            {
                if ((this.mUIVersion61Build7601SeWindow == null))
                {
                    this.mUIVersion61Build7601SeWindow = new WinWindow(this);
                    #region Search Criteria
                    this.mUIVersion61Build7601SeWindow.SearchProperties[WinWindow.PropertyNames.Name] = "Version 6.1 (Build 7601: Service Pack 1)";
                    this.mUIVersion61Build7601SeWindow.SearchProperties[WinWindow.PropertyNames.ClassName] = "Static";
                    this.mUIVersion61Build7601SeWindow.WindowTitles.Add("About Calculator");
                    #endregion
                }
                return this.mUIVersion61Build7601SeWindow;
            }
        }
        
        public WinWindow UICopyright2009MicrosoWindow
        {
            get
            {
                if ((this.mUICopyright2009MicrosoWindow == null))
                {
                    this.mUICopyright2009MicrosoWindow = new WinWindow(this);
                    #region Search Criteria
                    this.mUICopyright2009MicrosoWindow.SearchProperties[WinWindow.PropertyNames.Name] = "Copyright © 2009 Microsoft Corporation.  All rights reserved.";
                    this.mUICopyright2009MicrosoWindow.SearchProperties[WinWindow.PropertyNames.ClassName] = "Static";
                    this.mUICopyright2009MicrosoWindow.WindowTitles.Add("About Calculator");
                    #endregion
                }
                return this.mUICopyright2009MicrosoWindow;
            }
        }
        
        public WinWindow UITheWindows7EnterprisWindow
        {
            get
            {
                if ((this.mUITheWindows7EnterprisWindow == null))
                {
                    this.mUITheWindows7EnterprisWindow = new WinWindow(this);
                    #region Search Criteria
                    this.mUITheWindows7EnterprisWindow.SearchProperties[WinWindow.PropertyNames.Name] = "The Windows 7 Enterprise operating system and its user interface are protected by" +
                        " trademark and other pending or existing intellectual property rights in the Uni" +
                        "ted States and other countries.";
                    this.mUITheWindows7EnterprisWindow.SearchProperties[WinWindow.PropertyNames.ClassName] = "Static";
                    this.mUITheWindows7EnterprisWindow.WindowTitles.Add("About Calculator");
                    #endregion
                }
                return this.mUITheWindows7EnterprisWindow;
            }
        }
        
        public WinWindow UIOKWindow
        {
            get
            {
                if ((this.mUIOKWindow == null))
                {
                    this.mUIOKWindow = new WinWindow(this);
                    #region Search Criteria
                    this.mUIOKWindow.SearchProperties[WinWindow.PropertyNames.Name] = "OK";
                    this.mUIOKWindow.SearchProperties[WinWindow.PropertyNames.ClassName] = "Button";
                    this.mUIOKWindow.WindowTitles.Add("About Calculator");
                    #endregion
                }
                return this.mUIOKWindow;
            }
        }
        #endregion
        
        #region Fields
        private WinWindow mUIItemWindow;
        
        private WinWindow mUIMicrosoftWindowsWindow;
        
        private WinWindow mUIVersion61Build7601SeWindow;
        
        private WinWindow mUICopyright2009MicrosoWindow;
        
        private WinWindow mUITheWindows7EnterprisWindow;
        
        private WinWindow mUIOKWindow;
        #endregion
    }
}
